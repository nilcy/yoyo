h1. YOYO

UUO (you-you-oh) [short for "Un-Used Operation"]

h1. 環境構築の手順

h2. Java開発環境の構築 (Eclipse)

* Eclipse Kepler Release - Eclipse Java EE IDE for Web Developers.

h3. 拡張プラグイン導入#1 (Help -> Ecilpse Marketplace...)

# Maven Integration for Eclipse
# EGit - Git Team Provider
# GitHub Mylyn Connector
# Checkstyle Plug-in
# FindBugs Ecilpse Plugin

h3. 拡張プラグイン導入#2 (Help -> Install New Software... ->)

# Add -> http://propedit.sourceforge.jp/eclipse/updates/ (PropertiesEditor)

h2. DBサーバの構築 (PostgreSQL)

* PostgreSQL 9.3.1

h3. DBユーザの作成と削除

<pre>
DBユーザの作成
$ createuser --username=postgres --createdb --encrypted --inherit --login --pwprompt --createrole --superuser yoyo
Enter password for new role: <---- "happyhacking" と入力する。 
Enter it again: <---- "happyhacking" と入力する。 
</pre>
DBユーザの削除
<pre>
$ dropuser --username=postgres yoyo
</pre>

h3. データベースの作成と削除

# データベースの作成
## Unixのとき
<pre>
$ createdb --username=yoyo --encoding=UTF8 --locale=ja_JP.UTF-8 --owner=yoyo --template=template0 yoyo
</pre>
## Windowsのとき
<pre>
> createdb --username=yoyo --encoding=UTF8 --locale=Japanese_Japan.932 --owner=yoyo --template=template0 yoyo
</pre>
# データベースの削除
<pre>
$ dropdb --username=postgres yoyo
</pre>

h3. データベースへの接続

<pre>
$ psql --username=yoyo yoyo
</pre>

h2. APサーバ(GlassFish)

* GlassFish Server Open Source Edition 4.0
** Java EE 7 requires JDK 7

h3. JDBCドライバをサーバへインストール

<pre>
$ cp $MAVEN_REPO/org/postgresql/postgresql/9.2-1003-jdbc4/postgresql-9.2-1003-jdbc4.jar $GLASSFISH_HOME/lib
</pre>

h3. 起動と停止(再起動)

asadmin start-domain
asadmin stop-domain
(asadmin restart-domain)

h3. JDBCコネクションプールの作成 と JDBCリソースの作成

asadmin create-jdbc-connection-pool --datasourceclassname org.postgresql.ds.PGConnectionPoolDataSource --restype javax.sql.ConnectionPoolDataSource --property portNumber=5432:user=yoyo:password=happyhacking:serverName=localhost:databaseName=yoyo yoyo_primary_pool
asadmin ping-connection-pool yoyo_primary_pool
asadmin list-jdbc-connection-pools
asadmin create-jdbc-resource --connectionpoolid yoyo_primary_pool jdbc/yoyo/primaryDatabase
asadmin list-jdbc-resources

// 例: JDBCコネクションプールの削除 と JDBCリソースの削除
asadmin delete-jdbc-resource jdbc/yoyo/primaryDatabase
asadmin delete-jdbc-connection-pool yoyo_primary_pool

h3. 認証レルムの作成

asadmin create-auth-realm --classname com.sun.enterprise.security.ee.auth.realm.jdbc.JDBCRealm --property jaas-context=jdbcRealm:datasource-jndi=jdbc/yoyo/primaryDatabase:user-table=public.member:group-table=public.member_auth:user-name-column=account:password-column=password:group-name-column=auth:digest-algorithm=SHA-256:encoding=Hex yoyo_primary_auth
asadmin list-auth-realms

// 例: 認証レルムの削除
asadmin delete-auth-realm yoyo_primary_auth

h3. JavaMailリソースの作成

asadmin create-javamail-resource --mailhost smtp.gmail.com --fromaddress yoyo@gmail.com --mailuser yoyo@gmail.com --transprotocol smtps --transprotocolclass com.sun.mail.smtp.SMTPSSLTransport --description "yoyo mail session" --property mail-smtps-password=xxxxxxxx:mail-smtps-auth=true mail/yoyo/primarySession
asadmin list-javamail-resources

// 例: JavaMailリソースの削除
asadmin delete-javamail-resource mail/yoyo/primarySession

h3. JMSリソースの作成

asadmin create-jms-resource --restype javax.jms.ConnectionFactory jms/yoyo/primaryConnectionFactory
asadmin create-jms-resource --restype javax.jms.Queue jms/yoyo/primaryQueue
asadmin create-jms-resource --restype javax.jms.Topic jms/yoyo/primaryTopic
asadmin list-jms-resources

// 例: JMSリソースの削除
asadmin delete-jms-resource jms/yoyo/primaryConnectionFactory
asadmin delete-jms-resource jms/yoyo/primaryQueue
asadmin delete-jms-resource jms/yoyo/primaryTopic

h3. JVMオプションの作成

asadmin create-jvm-options '-Dlogback.configurationFile=${com.sun.aas.instanceRoot}/config/logback.xml'
asadmin list-jvm-options
cp ./yoyo-fw/yoyo-fw-standard/src/test/resources/logback-test.xml $GLASSFISH_HOME/domains/domain1/config/logback.xml

// 例: JVMオプションの削除
asadmin delete-jvm-options -Dlogback.configurationFile=${com.sun.aas.instanceRoot}/config/logback.xml
